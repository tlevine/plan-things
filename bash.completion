# Travel upwards until finding a git directory.
# _plan_dir [directory]
_plan_dir() {
  wd="$1"
  if test -d "$wd/.git"; then
    echo "$wd/.plans"
  else
    _plan_dir "$wd/.."
  fi
}

# Find all of the things in a group.
_plan_things() {
  group=$1
  plan_dir=$(_plan_dir "$PWD")
  ls "$plan_dir/$group"
}

# Find all of the tasks in a thing
_plan_tasks() {
  group=$1
  thing="$2"
  plan_dir=$(_plan_dir "$PWD")
  ls "$plan_dir/$group/$thing" |
    grep -v '^index.md$'
}

# Completion for the "edit" command
_plan_edit() {
  thing="$1"
  task="$2"
  for group in proposed current passed done; do
    if test -z "$task"; then
      _plan_things $group | grep "^$thing"
    else
      _plan_tasks $group "$thing" | grep "^$task"
    fi
  done
}

_plan_show_thing() {
  thing="$1"
  for group in proposed current passed done; do
    _plan_things $group | grep "^$thing"
  done
}

_plan_move() {
  thing="$1"
  new_group="$2"
  for old_group in proposed current passed done; do
    if test -z "$new_group"; then
      _plan_things $old_group | grep "^$thing"
    else
      compgen -W "all proposed current passed done" -- "$new_group"
    fi
  done
}

_plan() {
  local command=${COMP_WORDS[1]}
  local one=${COMP_WORDS[2]}
  local two=${COMP_WORDS[3]}

  case "$command" in
    edit)  COMPREPLY=( $(_plan_edit "$one" "$two") ) ;;
    move)  COMPREPLY=( $(_plan_move "$one" "$two") ) ;;
    group) COMPREPLY=( $(compgen -W "all proposed current passed done" -- "$one")) ) ;;
    thing) COMPREPLY=( $(_plan_show_thing "$one")
    *)     COMPREPLY=( $(compgen -W "thing group edit move help" -- "$command") ) ) ;;
  esac
}
complete -F _plan plan
